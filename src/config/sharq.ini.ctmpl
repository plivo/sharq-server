[uwsgi]
# automatically start master process
master = true

# try to autoload appropriate plugin if "unknown" option has been specified
autoload = true

# spawn n uWSGI worker processes
workers = {{ printf "%s/%s/%s/%s/config/uwsgi/num_workers" (env "TEAM") (env "ENVIRONMENT") (env "SHARQ_TYPE") (env "REGION") | key | parseInt }}

# automatically kill workers on master's death
no-orphans = true

# write master's pid in file /run/uwsgi/<confnamespace>/<confname>/pid
pidfile = /var/run/sharq/uwsgi.pid

# bind to UNIX socket at /run/uwsgi/<confnamespace>/<confname>/socket
socket = /var/run/sharq/sharq.sock

# set mode of created UNIX socket
chmod-socket = 666

{{$loggingKeyName := printf "%s/%s/%s/%s/config/logging/disable" (env "TEAM") (env "ENVIRONMENT") (env "SHARQ_TYPE") (env "REGION")}}
{{ if key $loggingKeyName | parseBool }}
disable-logging=True
{{ end }}

disable-logging = True

# daemonize
#daemonize=False

# sharq related
chdir = /opt/sharq-server
virtualenv = /opt/sharq-server
module = wsgi:app
gevent = 1024

# configure sharq config path
env = SHARQ_CONFIG=/etc/sharq-server/config/sharq.conf
log-format = {"client_addr":"%(addr)","request_method":"%(method)","request_uri":"%(uri)","response_size":%(rsize),"response_time":%(micros),"status":%(status),"protocol":"%(proto)","timestamp":%(ltime),"level":"info"}